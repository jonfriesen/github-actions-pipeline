project_name: gopipeline
before:
  hooks:
    # you may remove this if you don't use vgo
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
- 
  id: gopipeline
  binary: gopipeline
  main: ./cmd/go-pipeline/main.go
  env:
  - CGO_ENABLED=0
  - GO111MODULE=on
  ldflags:
  - -X main.Build={{ .ShortCommit }}
  - -X main.Major={{ .Major }}
  - -X main.Minor={{ .Minor }}
  - -X main.Patch={{ .Patch }}
  - -X main.Label=release
  goos:
  - windows
  - darwin
  - linux
  ignore:
  - goos: darwin
    goarch: 386

archives:
- 
  id: gopipeline-archive
  name_template: "go-pipeline-{{ .Version }}-{{ .Os }}-{{ .Arch }}"
  format_overrides:
  - goos: windows
    format: zip
  files: [a-workaround-to-include-only-the-binary*]
  wrap_in_directory: false

checksum:
  name_template: "go-pipeline-{{ .Version }}-checksums.sha256"

snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'

# blobs:
#   -
#     provider: s3
#     bucket: goreleaser-pipeline
#     ids:
#     - gopipeline
#     folder: "{{ .ProjectName }}/{{ .Tag }}"
s3:
  # You can have multiple s3 configs
  -
    # Template for the bucket name(without the s3:// prefix)
    # Default is empty.
    bucket: goreleaser-pipeline

    # IDs of the artifacts you want to upload.
    ids:
    - gopipeline-archive

    # AWS Region to use.
    # Defaults is us-east-1
    region: sfo2

    # Template for the path/name inside the bucket.
    # Default is `{{ .ProjectName }}/{{ .Tag }}`
    folder: "{{ .ProjectName }}/{{ .Tag }}"

    # Endpoint allows you to set a custom endpoint, which is useful if you
    # want to push your artifacts to a minio server for example.
    # Default is AWS S3 URL.
    endpoint: "http://sfo2.digitaloceanspaces.com"

    # Sets the ACL of the object using the specified canned ACL.
    # Default is private.
    acl: public-read